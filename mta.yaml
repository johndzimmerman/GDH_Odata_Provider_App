_schema-version: "3.1"
ID: GDH_Odata_Provider_App
description: A simple CAP project.
version: 1.0.0
modules:
- name: GDH_Odata_Provider_App-srv
  type: nodejs
  path: gen/srv
  requires:
  - name: GDH_Odata_Provider_App-auth
  - name: GDH_Odata_Provider_App-db
  provides:
  - name: srv-api
    properties:
      srv-url: ${default-url}
  parameters:
    buildpack: nodejs_buildpack
  build-parameters:
    builder: npm
- name: GDH_Odata_Provider_App-db-deployer
  type: hdb
  path: gen/db
  requires:
  - name: GDH_Odata_Provider_App-db
    properties:
      TARGET_CONTAINER: ~{hdi-container-name}
  - name: cross-container-service-1
    group: SERVICE_REPLACEMENTS
    properties:
      key: ServiceName_1
      service: ~{the-service-name}
  parameters:
    buildpack: nodejs_buildpack
- name: GDH_Odata_Provider_App
  type: approuter.nodejs
  path: app/
  requires:
  - name: srv-api
    group: destinations
    properties:
      forwardAuthToken: true
      name: srv-api
      url: ~{srv-url}
  - name: GDH_Odata_Provider_App-auth
  parameters:
    disk-quota: 256M
    keep-existing-routes: true
    memory: 256M
resources:
- name: GDH_Odata_Provider_App-auth
  type: org.cloudfoundry.managed-service
  parameters:
    config:
      tenant-mode: dedicated
      xsappname: GDH_Odata_Provider_App-${org}-${space}
    path: ./xs-security.json
    service: xsuaa
    service-plan: application
- name: GDH_Odata_Provider_App-db
  type: com.sap.xs.hdi-container
  parameters:
    service: hana
    service-plan: hdi-shared
  properties:
    hdi-container-name: ${service-name}
- name: cross-container-service-1
  type: org.cloudfoundry.existing-service
  parameters:
    service-name: GDH_UPS
  properties:
    the-service-name: ${service-name}
parameters:
  enable-parallel-deployments: true
build-parameters:
  before-all:
  - builder: custom
    commands:
    - npx cds build --production
